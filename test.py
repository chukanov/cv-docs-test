import os
import csv
import base64
import requests
import json

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
TEST_DATA_DIR = "test_data"  # –ü–∞–ø–∫–∞ —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
CSV_FILE = os.path.join(TEST_DATA_DIR, "test.csv")  # –ü—É—Ç—å –∫ CSV
API_URL = "http://localhost:8000/v1/verifyStudentsData"  # –ê–¥—Ä–µ—Å API
RESULTS_FILE = "test_results.csv"  # –§–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤
AUTH_TOKEN = "16dg8a8s-d4tx"

# === –§—É–Ω–∫—Ü–∏—è –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –≤ Base64 ===
def encode_file_to_base64(file_path):
    with open(file_path, "rb") as f:
        return base64.b64encode(f.read()).decode("utf-8")

# === –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ MIME-—Ç–∏–ø–∞ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é ===
MIME_TYPES = {
    "jpeg": "image/jpeg",
    "jpg": "image/jpeg",
    "png": "image/png",
    "pdf": "application/pdf"
}

def get_mime_type(filename):
    ext = filename.split(".")[-1].lower()
    return MIME_TYPES.get(ext, "application/octet-stream")

# === –ß—Ç–µ–Ω–∏–µ CSV ===
with open(CSV_FILE, newline="", encoding="utf-8") as csvfile:
    reader = csv.DictReader(csvfile, delimiter=";")
    test_results = []

    for row in reader:
        last_name = row["lastName"]
        first_name = row["firstName"]
        sur_name = row["surName"]
        gender = row["gender"]
        birth_date = row["birthDate"]
        diploma_country = row["diplomaCountry"]
        education_level = row["educationLevel"]
        diploma_last_name = row.get("diplomaLastName", "")

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞
        user_folder = os.path.join(TEST_DATA_DIR, f"{last_name} {first_name} {sur_name}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞–ø–∫–∏
        if not os.path.isdir(user_folder):
            print(f"‚ö†Ô∏è –ü–∞–ø–∫–∞ {user_folder} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.")
            continue

        # –ò—â–µ–º —Ñ–∞–π–ª—ã –ø–∞—Å–ø–æ—Ä—Ç–∞, –¥–∏–ø–ª–æ–º–∞ –∏ —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –æ –±—Ä–∞–∫–µ
        user_files = {}
        for file_type, file_prefix in {"passport": "p", "diploma": "d", "marriageCertificate": "s"}.items():
            for ext in MIME_TYPES.keys():
                file_path = os.path.join(user_folder, f"{file_prefix}.{ext}")
                if os.path.exists(file_path):
                    user_files[file_type] = {
                        "fileName": os.path.basename(file_path),
                        "mimeType": get_mime_type(file_path),
                        "data": encode_file_to_base64(file_path)
                    }
                    break  # –ù–∞—à–ª–∏ —Ñ–∞–π–ª, –±–æ–ª—å—à–µ –Ω–µ –∏—â–µ–º
            else:
                if file_type != "marriageCertificate":  # –°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ –±—Ä–∞–∫–µ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
                    print(f"‚ö†Ô∏è –§–∞–π–ª {file_prefix} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ {user_folder}. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.")
                    continue

        # –§–æ—Ä–º–∏—Ä—É–µ–º JSON-–∑–∞–ø—Ä–æ—Å
        payload = {
            "userInfo": {
                "firstName": first_name,
                "surName": sur_name,
                "lastName": last_name,
                "gender": gender,
                "birthDate": birth_date,
                "diplomaCountry": diploma_country,
                "educationLevel": education_level,
                "diplomaLastName": diploma_last_name
            },
            "userFiles": user_files
        }

        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
        headers = {
            "Authorization": f"Bearer {AUTH_TOKEN}",
            "Content-Type": "application/json"
        }

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
        try:
            response = requests.post(API_URL, json=payload, timeout=30, headers=headers)
            response_json = response.json()
            status = response_json.get("status", "error")
            if status=="success":
                result = "‚úÖ Passed"
            else:
                result = "‚ùå Failed ({raw_resp})"
        except Exception as e:
            result = f"‚ùå Failed response: {str(e)}"

        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        print(f"üîπ {last_name} {first_name} {sur_name}: {result}")

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        test_results.append([last_name, first_name, sur_name, result])

# === –ó–∞–ø–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ CSV ===
with open(RESULTS_FILE, "w", newline="", encoding="utf-8") as f:
    writer = csv.writer(f)
    writer.writerow(["–§–∞–º–∏–ª–∏—è", "–ò–º—è", "–û—Ç—á–µ—Å—Ç–≤–æ", "–†–µ–∑—É–ª—å—Ç–∞—Ç"])
    writer.writerows(test_results)

print("\nüìú –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤", RESULTS_FILE)
